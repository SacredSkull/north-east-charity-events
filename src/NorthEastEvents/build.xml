<?xml version="1.0" encoding="UTF-8"?>
<project name="North East Events" default="full-build">
    <!-- By default, we assume all tools to be on the $PATH -->

	<property name="containerName" value="northeastcharityevents_php_1"/>
    <property name="phpmd"   value="${basedir}/php.sh"/>
    <property name="phpunit" value="${basedir}/php.sh"/>

    <property name="phpmdArgs" value="phpmd"/>
    <property name="phpunitArgs" value="phpunit"/>

    <target name="full-build"
        depends="prepare,static-analysis,phpunit,-check-failure"
        description="Performs static analysis, runs the tests, and generates project documentation"/>

    <target name="full-build-parallel"
        depends="prepare,static-analysis-parallel,phpunit,-check-failure"
        description="Performs static analysis (executing the tools in parallel) and runs the tests"/>

    <target name="quick-build"
        depends="prepare,lint,phpunit-no-coverage"
        description="Performs a lint check and runs the tests (without generating code coverage reports)"/>

    <target name="static-analysis"
        depends="lint"
        description="Performs static analysis" />

    <!-- Adjust the threadCount attribute's value to the number of CPUs -->

    <target name="static-analysis-parallel"
        description="Performs static analysis (executing the tools in parallel)">
        <parallel threadCount="4">
            <antcall target="lint"/>
        </parallel>
    </target>

    <target name="clean"
        unless="clean.done"
        description="Cleanup build artifacts">
        <delete dir="${basedir}/../../build/api"/>
        <delete dir="${basedir}/../../build/coverage"/>
        <delete dir="${basedir}/../../build/logs"/>
        <property name="clean.done" value="true"/>
    </target>

    <target name="prepare"
        unless="prepare.done"
        depends="clean"
        description="Prepare for build">
        <mkdir dir="${basedir}/../../build/api"/>
        <mkdir dir="${basedir}/../../build/coverage"/>
        <mkdir dir="${basedir}/../../build/logs"/>
        <property name="prepare.done" value="true"/>
    </target>
	
	<target name="dependencies" 
		unless="dependencies.done"
		description="Update/install dependencies for project">
		<exec executable="${basedir}/php.sh">
            <arg line="/bin/sh /var/www/upgrade.sh"/>
        </exec>
		<property name="dependencies.done" value="true"/>
	</target>

    <target name="lint"
        unless="lint.done"
        description="Perform syntax check of sourcecode files">
        <apply executable="${basedir}/php.sh" taskname="lint" relative="true">
            <arg value="php -l" />
            <fileset dir="Models">
                <include name="*.php" />
                <modified />
            </fileset>
            <fileset dir="Controllers">
                <include name="**/*.php" />
                <modified />
            </fileset>
            <fileset dir="config">
                <include name="bootstrap.php" />
                <modified />
            </fileset>
            <fileset dir="../../tests">
                <include name="**/*.php" />
                <modified />
            </fileset>
        </apply>
        <property name="lint.done" value="true"/>
    </target>

    <target name="phpmd"
        unless="phpmd.done"
        description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="${phpmd}" taskname="phpmd">
            <arg line="${phpmdArgs}" />
            <arg path="/var/www/src/NorthEastEvents" />
            <arg value="text" />
            <arg value="/var/www/src/NorthEastEvents/phpmd.xml" />
            <arg value="--suffixes" />
            <arg value="php" />
			<arg value="--exclude" />
            <arg value="vendor/,Models/Base/,Models/Map/,cache/,config/propel/,config/slim/" />
        </exec>
        <property name="phpmd.done" value="true"/>
    </target>

    <target name="phpmd-ci"
        unless="phpmd.done"
        depends="prepare"
        description="Perform project mess detection using PHPMD and log result in XML format. Intended for usage within a continuous integration environment.">
        <exec executable="${phpmd}" taskname="phpmd">
            <arg line="${phpmdArgs}" />
            <arg path="/var/www/src/NorthEastEvents" />
            <arg value="xml" />
            <arg value="/var/www/src/NorthEastEvents/phpmd.xml" />
            <arg value="--exclude" />
            <arg value="vendor/,Models/Base/,Models/Map/,cache/,config/propel/,config/slim/" />
            <arg value="--suffixes" />
            <arg value="php" />
            <arg value="--reportfile" />
            <arg path="/var/www/build/logs/pmd.xml" />
        </exec>
        <property name="phpmd.done" value="true"/>
    </target>


    <target name="phpunit"
        unless="phpunit.done"
        depends="prepare,dependencies"
        description="Run unit tests with PHPUnit">
        <exec executable="${phpunit}" resultproperty="result.phpunit" taskname="phpunit">
            <arg line="${phpunitArgs}" />
        </exec>
        <property name="phpunit.done" value="true"/>
    </target>

    <target name="phpunit-no-coverage"
        unless="phpunit.done"
        depends="prepare,dependencies"
        description="Run unit tests with PHPUnit (without generating code coverage reports)">
        <exec executable="${phpunit}" failonerror="true" taskname="phpunit">
            <arg value="${phpunitArgs}" />
            <arg value="--no-coverage"/>
        </exec>
        <property name="phpunit.done" value="true"/>
    </target>

    <target name="-check-failure">
        <fail message="PHPUnit did not finish successfully">
            <condition>
                <not>
                    <equals arg1="${result.phpunit}" arg2="0"/>
                </not>
            </condition>
        </fail>
    </target>

</project>